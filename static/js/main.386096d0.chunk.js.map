{"version":3,"sources":["serviceWorker.ts","connectionReducers.ts","settings/dag-settings.ts","eventHandlers.ts","styles/index.ts","components/NodeType1/index.tsx","components/NodeType2/index.tsx","components/NodeType3/index.tsx","data.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","transformConnectionEncoder","connObj","instance","matchingNodes","newConnObj","data","sourceId","targetId","sourceNode","find","node","id","config","indexOf","type","concat","transformConnectionDecoder","slice","conditionConnectionEncoder","condition","conditionConnectionDecoder","cloneDeep","require","defaultConnectionStyle","hoverPaintStyle","dashstyle","lineWidth","strokeStyle","strokeWidth","paintStyle","outlineColor","outlineWidth","defaultSettings","Object","assign","ConnectionOverlays","foldback","length","Connector","alwaysRespectStubs","cornerRadius","midpoint","stub","Endpoint","EndpointStyle","radius","commonSettings","endpoint","maxConnections","connectorStyle","fill","stroke","sourceSettings","objectSpread","isSource","sinkSettings","isTarget","conditionRightEndpoint","overlays","label","conditionBottomEndpoint","anchor","getSettings","arguments","undefined","settings","default","sink","source","transformSink","transformSource","highlightConnection","connection","toggleType","onEndPointClick","jsPlumbObject","endpoints","connections","forEach","conn","COLORS","blueGreen","mintCream","salmonPink","teal","yellow","theme","main","borderRadius","boxShadow","color","colors","endPointStyles","css","&.right","left","height","position","top","width","zIndex","nodeWrapperStyles","alignItems","display","justifyContent","nodeStyles","background","border","cursor","NodeType1","rightEndpointRef","initConfig","endPointParams","element","this","params","uuid","props","referenceParams","makeTargetParams","allowLoopback","dropOptions","hoverClass","nodeId","initNode","_this2","style","react","className","ref","DefaultNode","modNodeStyle","modEndpointStyles","NodeType2","_ref","modEndPointStyles","&.bottom","NodeType3","bottomEndpointRef","nodes","uuidv4","headerStyles","margin","buttonPanelStyles","buttonStyles","fontSize","padding","nodeType1Styles","backgroundColor","nodeType2Styles","nodeType3Styles","dagWrapperStyles","HEIGHT_OF_BUTTON_PANEL","registerTypes","dotted","selected","eventListeners","click","getUuid","setType","endpointClick","global","fontFamily","overflow",":hover","textDecoration","marginBottom","> li","> p","borderBottom","fontWeight","paddingBottom","typeToComponentMap","action","transform","graphNodes","separation","graph","dagre","graphlib","Graph","setGraph","marginx","marginy","nodesep","rankdir","ranker","ranksep","setDefaultEdgeLabel","setNode","setEdge","layout","getLayout","map","x","y","App","state","zoom","addNode","t","_this","setState","toConsumableArray","Math","ceil","random","setZoom","zoomIn","key","onClick","bind","react_dag_default","a","jsPlumbSettings","connectionDecoders","connectionEncoders","onChange","i","Component","React","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.386096d0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { IConnectionParams, IConnectionRule, INode } from \"react-dag\";\n\nexport const transformConnectionEncoder: IConnectionRule = (\n  connObj: IConnectionParams,\n  instance: jsPlumbInstance,\n  matchingNodes: INode[]\n): IConnectionParams => {\n  const newConnObj = {\n    data: connObj.data,\n    sourceId: connObj.sourceId,\n    targetId: connObj.targetId,\n  };\n  const sourceNode = matchingNodes.find(\n    node => node.id === newConnObj.sourceId\n  );\n  if (!sourceNode) {\n    return connObj;\n  }\n  if (\n    sourceNode.config &&\n    [\"transform\", \"sink\"].indexOf(sourceNode.config.type) !== -1 &&\n    connObj.sourceId.indexOf(\"right\") === -1\n  ) {\n    newConnObj.sourceId = `${connObj.sourceId}-right`;\n  }\n  return newConnObj;\n};\n\nexport const transformConnectionDecoder: IConnectionRule = (\n  connObj: IConnectionParams,\n  instance: jsPlumbInstance,\n  matchingNodes: INode[]\n): IConnectionParams => {\n  const newConnObj: IConnectionParams = {\n    data: connObj.data,\n    sourceId: connObj.sourceId,\n    targetId: connObj.targetId,\n  };\n  const sourceNode = matchingNodes.find(\n    node => connObj.sourceId.indexOf(`${node.id}-`) !== -1\n  );\n  if (!sourceNode) {\n    return connObj;\n  }\n\n  if (\n    sourceNode.config &&\n    [\"transform\", \"sink\"].indexOf(sourceNode.config.type) !== -1 &&\n    connObj.sourceId.indexOf(\"right\") !== -1\n  ) {\n    newConnObj.sourceId = `${connObj.sourceId.slice(\n      0,\n      connObj.sourceId.indexOf(\"-right\")\n    )}`;\n  }\n  return newConnObj;\n};\n\nexport const conditionConnectionEncoder: IConnectionRule = (\n  connObj: IConnectionParams,\n  instance: jsPlumbInstance,\n  matchingNodes: INode[]\n): IConnectionParams => {\n  const newConnObj: IConnectionParams = {\n    data: connObj.data,\n    sourceId: connObj.sourceId,\n    targetId: connObj.targetId,\n  };\n  const sourceNode = matchingNodes.find(node => connObj.sourceId === node.id);\n  if (!sourceNode) {\n    return connObj;\n  }\n\n  if (\n    sourceNode.config &&\n    sourceNode.config.type === \"condition\" &&\n    connObj.sourceId.indexOf(\"bottom\") === -1 &&\n    connObj.sourceId.indexOf(\"right\") === -1\n  ) {\n    if (connObj.data) {\n      if (connObj.data.condition === \"true\") {\n        newConnObj.sourceId = `${connObj.sourceId}-right`;\n      } else {\n        newConnObj.sourceId = `${connObj.sourceId}-bottom`;\n      }\n    }\n  }\n  return newConnObj;\n};\n\nexport const conditionConnectionDecoder: IConnectionRule = (\n  connObj: IConnectionParams,\n  instance: jsPlumbInstance,\n  matchingNodes: INode[]\n) => {\n  const newConnObj: IConnectionParams = {\n    data: connObj.data,\n    sourceId: connObj.sourceId,\n    targetId: connObj.targetId,\n  };\n  const sourceNode = matchingNodes.find(\n    node => connObj.sourceId.indexOf(`${node.id}-`) !== -1\n  );\n\n  if (!sourceNode) {\n    return connObj;\n  }\n\n  if (\n    sourceNode.config &&\n    sourceNode.config.type === \"condition\"\n  ) {\n    if (connObj.sourceId.indexOf(\"right\") !== -1) {\n      newConnObj.sourceId = `${connObj.sourceId.slice(\n        0,\n        connObj.sourceId.indexOf(\"-right\")\n      )}`;\n      newConnObj.data = {\n        condition: \"true\",\n      };\n    }\n    if (connObj.sourceId.indexOf(\"bottom\") !== -1) {\n      newConnObj.sourceId = `${connObj.sourceId.slice(\n        0,\n        connObj.sourceId.indexOf(\"-bottom\")\n      )}`;\n      newConnObj.data = {\n        condition: \"false\",\n      };\n    }\n  }\n  return newConnObj;\n};\n","\n/* tslint:disable */\nconst cloneDeep = require(\"lodash.clonedeep\");\n/* tslint: enable */\n\nconst defaultConnectionStyle = {\n  hoverPaintStyle: {\n    dashstyle: \"solid\",\n    lineWidth: 4,\n    strokeStyle: \"#58b7f6\",\n    strokeWidth: 3,\n  },\n  paintStyle: {\n    lineWidth: 2,\n    outlineColor: \"transparent\",\n    outlineWidth: 4,\n    strokeStyle: \"#4e5568\",\n    strokeWidth: 3,\n  },\n};\n\nexport const defaultSettings = Object.assign(\n  {\n    ConnectionOverlays: [\n      [\n        \"Arrow\",\n        {\n          foldback: 0.8,\n          id: \"arrow\",\n          length: 14,\n          location: 1,\n        },\n      ],\n    ],\n    Connector: [\n      \"Flowchart\",\n      {\n        alwaysRespectStubs: true,\n        cornerRadius: 20,\n        midpoint: 0.2,\n        stub: [10, 15],\n      },\n    ],\n    Endpoint: \"Dot\",\n    EndpointStyle: { radius: 10 },\n  },\n  /* tslint:disable */\n  defaultConnectionStyle\n  /* tslint:enable */\n);\n\nexport const connectorStyle = {\n  lineWidth: 2,\n  radius: 5,\n  stroke: \"black\",\n  strokeWidth: 2,\n};\n\nexport const commonSettings = {\n  endpoint: \"Dot\",\n  maxConnections: -1, // -1 means unlimited connections\n  paintStyle: {\n    connectorStyle: defaultConnectionStyle.paintStyle,\n    fill: \"black\",\n    lineWidth: 3,\n    radius: 5,\n    stroke: \"black\",\n  },\n};\nexport const sourceSettings = {\n  ...commonSettings,\n  isSource: true,\n};\nexport const sinkSettings = {\n  ...commonSettings,\n  isTarget: true,\n};\nexport const conditionRightEndpoint = {\n  overlays: [\n    [\"Label\", { id: \"yesLabel\", label: \"Yes\", location: [0.5, -0.55] }],\n  ],\n  ...sourceSettings,\n};\n\nexport const conditionBottomEndpoint = {\n  anchor: \"Bottom\",\n  overlays: [\n    [\n      \"Label\",\n      {\n        id: \"noLabel\",\n        label: \"No\",\n        location: [0.5, -0.85],\n      },\n    ],\n  ],\n  ...sourceSettings,\n};\n\nexport const dottedConnectionStyle = {\n  paintStyle: {\n    dashstyle: \"2 4\",\n    lineWidth: 2,\n    outlineColor: \"transparent\",\n    outlineWidth: 4,\n    strokeStyle: \"#0099ff\",\n    strokeWidth: 2,\n  },\n};\n\nexport const selectedConnectionStyle = {\n  paintStyle: {\n    dashstyle: \"solid\",\n    lineWidth: 4,\n    outlineColor: \"transparent\",\n    outlineWidth: 4,\n    strokeStyle: \"#58b7f6\",\n  },\n};\n\nexport function getSettings(isDisabled = false) {\n  let settings = {} as any;\n  if (isDisabled) {\n    settings = {\n      commonSettings,\n      conditionBottomEndpoint,\n      conditionRightEndpoint,\n      default: defaultSettings,\n      sink: sinkSettings,\n      source: sourceSettings,\n      transformSink: {},\n      transformSource: {},\n    };\n  } else {\n    settings = {\n      commonSettings,\n      conditionBottomEndpoint,\n      conditionRightEndpoint,\n      default: defaultSettings,\n      sink: sinkSettings,\n      source: sourceSettings,\n      transformSink: {},\n      transformSource: {},\n    };\n  }\n\n  settings.transformSource = cloneDeep(settings.source);\n  settings.transformSink = cloneDeep(settings.sink);\n\n  return settings;\n}\n","import { IConnectionParams } from \"react-dag\";\n\nexport function onConnectionEventHandler(connObj: IConnectionParams) {\n  connObj.connection.endpoints.forEach((endpoint: IConnectionParams) => {\n    const uuid: string = endpoint.getUuid();\n    if (!uuid) {\n      return;\n    }\n    if (uuid.indexOf(\"DottedEndPoint\") !== -1) {\n      connObj.connection.setType(\"dotted\");\n    }\n  });\n}\n\nfunction highlightConnection(connection: IConnectionParams) {\n  connection.toggleType(\"selected\");\n}\n\nexport function onEndPointClick(jsPlumbObject: any) {\n  if (jsPlumbObject.endpoints) {\n    highlightConnection(jsPlumbObject);\n  }\n  if (jsPlumbObject.connections) {\n    jsPlumbObject.connections.forEach((conn: IConnectionParams) => highlightConnection(conn));\n  }\n}\n","import { css, hover, media } from \"glamor\";\n\nconst COLORS = {\n  blueGreen: \"#7EDAD4\",\n  mintCream: \"#F9FFF9\",\n  salmonPink: \"#FF9393\",\n  teal: \"#588188\",\n  yellow: \"#FFEC94\",\n};\n\nexport const theme = {\n  main: {\n    borderRadius: \"4px\",\n    boxShadow: (color = COLORS.salmonPink) => `1px 1px 1px 1px ${color}`,\n    colors: COLORS,\n  },\n};\n\nexport function setGlobal() {\n  css.global(\"html, body\", {\n    backgroundColor: `${theme.main.colors.salmonPink}`,\n    fontFamily: `Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace`,\n    fontSize: \"1rem\",\n    height: \"100vh\",\n    margin: 0,\n    overflow: \"auto\",\n    width: \"100vw\",\n  });\n\n  css.global(\".jtk-endpoint.jtk-endpoint-anchor\", {\n    zIndex: 20001,\n  });\n\n  css.global(\"body > #app-dag\", {\n    height: \"100%\",\n    overflow: \"auto\",\n    width: \"100%\",\n  });\n\n  css.global(\"a\", {\n    \":hover\": {\n      textDecoration: \"none\",\n    },\n  });\n  css.global(\"p\", {\n    marginBottom: \"2rem\",\n  });\n  css.global(\"ul\", {\n    \"> li\": {\n      \"> p\": {\n        margin: \"0\",\n      },\n      margin: \"10px 0\",\n    },\n    \"> p\": {\n      margin: \"0\",\n    },\n  });\n  css.global(\"h3, h4, h5\", {\n    borderBottom: \"1px solid\",\n    fontWeight: \"bold\",\n    paddingBottom: \"10px\",\n  });\n}\n","import * as React from \"react\";\n\nimport {DefaultNode} from \"react-dag\";\nimport { css, StyleAttribute } from \"glamor\";\nimport { getSettings } from \"../../settings/dag-settings\";\nimport { theme } from \"../../styles\";\n\nexport const endPointStyles = css({\n  \"&.right\": {\n    left: \"190px\",\n  },\n  borderRadius: \"100%\",\n  height: \"25px\",\n  left: \"-12px\",\n  position: \"absolute\",\n  top: \"25px\",\n  width: \"25px\",\n  zIndex: 200001,\n});\nexport const nodeWrapperStyles = css({\n  alignItems: \"center\",\n  display: \"flex\",\n  height: \"100%\",\n  justifyContent: \"center\",\n  position: \"relative\",\n  width: \"100%\",\n});\nexport const nodeStyles = css({\n  background: \"white\",\n  border: `2px solid ${theme.main.colors.blueGreen}`,\n  cursor: \"pointer\",\n  display: \"inline-block\",\n  height: \"100px\",\n  position: \"absolute\",\n  width: \"200px\",\n  zIndex: 20000,\n});\n\nexport default class NodeType1 extends DefaultNode {\n  private rightEndpointRef: HTMLElement | null;\n\n  public componentDidMount() {\n    const { transformSource } = getSettings() as any;\n    const initConfig = {\n      endPointParams: [\n        {\n          element: this.rightEndpointRef,\n          params: {\n            ...transformSource,\n            isSource: true,\n            uuid: `${this.props.id}-transform`,\n          },\n          referenceParams: {},\n        },\n      ],\n      makeTargetParams: {\n        allowLoopback: false,\n        anchor: \"ContinuousLeft\",\n        dropOptions: { hoverClass: \"drag-hover\" },\n        isTarget: true,\n      },\n      nodeId: this.props.id,\n    };\n    if (this.props.initNode) {\n      this.props.initNode(initConfig);\n    }\n  }\n  public render() {\n    const config = this.props.config;\n    let style = {};\n    if (config) {\n      style = config.style;\n    }\n    return (\n      <div\n        id={this.props.id}\n        className={`${nodeStyles}`}\n        style={style}\n      >\n        <div className={`${nodeWrapperStyles}`}>\n          {config && config.label ? config.label : this.props.id}\n          <div\n            id={`${this.props.id}-right`}\n            ref={ref => (this.rightEndpointRef = ref)}\n            className={`${endPointStyles} right`}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { endPointStyles, nodeStyles, nodeWrapperStyles } from \"../NodeType1\";\n\nimport {DefaultNode} from \"react-dag\";\nimport { css } from \"glamor\";\nimport { getSettings } from \"../../settings/dag-settings\";\nimport { theme } from \"../../styles\";\n\nconst modNodeStyle = css({\n  border: `2px solid ${theme.main.colors.teal}`,\n});\n\nconst modEndpointStyles = css({\n  zIndex: 20001,\n});\nexport default class NodeType2 extends DefaultNode {\n  private rightEndpointRef: HTMLElement | null;\n  public componentDidMount() {\n    const { transformSource, transformSink } = getSettings() as any;\n    const initConfig = {\n      endPointParams: [\n        {\n          element: this.rightEndpointRef,\n          params: {\n            ...transformSource,\n            isSource: true,\n            uuid: `${this.props.id}-DottedEndpoint-right`,\n          },\n          referenceParams: {},\n        },\n      ],\n      makeTargetParams: {\n        allowLoopback: false,\n        anchor: \"ContinuousLeft\",\n        dropOptions: { hoverClass: \"drag-hover\" },\n        isTarget: true,\n        uuid: `${this.props.id}-DottedEndPoint`,\n      },\n      nodeId: this.props.id,\n    };\n    if (this.props.initNode) {\n      this.props.initNode(initConfig);\n    }\n  }\n  public render() {\n    const config = this.props.config;\n    let style = {};\n    if (config) {\n      style = config.style;\n    }\n    return (\n      <div\n        id={this.props.id}\n        className={`${nodeStyles} ${modNodeStyle}`}\n        style={style}\n      >\n        <div className={`${nodeWrapperStyles}`}>\n          {config && config.label ? config.label : this.props.id}\n        </div>\n        <div\n          id={`${this.props.id}-right`}\n          ref={ref => (this.rightEndpointRef = ref)}\n          className={`${endPointStyles} ${modEndpointStyles} right`}\n        />\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport { endPointStyles, nodeWrapperStyles } from \"../NodeType1\";\n\nimport {DefaultNode} from \"react-dag\";\nimport { css } from \"glamor\";\nimport { getSettings } from \"../../settings/dag-settings\";\nimport { theme } from \"../../styles\";\n\nconst nodeStyles = css({\n  background: \"white\",\n  border: `2px solid ${theme.main.colors.yellow}`,\n  cursor: \"pointer\",\n  height: \"105px\",\n  left: \"200px\",\n  position: \"absolute\",\n  top: \"200px\",\n  width: \"105px\",\n});\n\nconst modEndPointStyles = css({\n  \"&.bottom\": {\n    height: \"15px\",\n    left: \"45px\",\n    top: \"100px\",\n  },\n  \"&.right\": {\n    height: \"15px\",\n    left: \"95px\",\n    top: \"35px\",\n  },\n});\n\nexport default class NodeType3 extends DefaultNode {\n  private rightEndpointRef: HTMLElement | null;\n  private bottomEndpointRef: HTMLElement | null;\n\n  public componentDidMount() {\n    const {\n      conditionBottomEndpoint,\n      conditionRightEndpoint,\n    } = getSettings() as any;\n    const initConfig = {\n      endPointParams: [\n        {\n          element: this.rightEndpointRef,\n          params: {\n            ...conditionRightEndpoint,\n            isSource: true,\n            uuid: `${this.props.id}-condition-right`,\n          },\n          referenceParams: {},\n        },\n        {\n          element: this.bottomEndpointRef,\n          params: {\n            ...conditionBottomEndpoint,\n            uuid: `${this.props.id}-condition-bottom`,\n          },\n          referenceParams: {},\n        },\n      ],\n      makeTargetParams: {\n        allowLoopback: false,\n        anchor: \"ContinuousLeft\",\n        dropOptions: { hoverClass: \"drag-hover\" },\n        isTarget: true,\n      },\n      nodeId: this.props.id,\n    };\n    if (this.props.initNode) {\n      this.props.initNode(initConfig);\n    }\n  }\n\n  public render() {\n    const config = this.props.config;\n    let style = {};\n    if (config) {\n      style = config.style;\n    }\n    return (\n      <div\n        id={this.props.id}\n        className={`${nodeStyles}`}\n        style={style}\n      >\n        <div className={`${nodeWrapperStyles}`}>\n          {config && config.label ? config.label : this.props.id}\n          <div\n            id={`${this.props.id}-right`}\n            ref={ref => (this.rightEndpointRef = ref)}\n            className={`${endPointStyles} ${modEndPointStyles} right`}\n          />\n          <div\n            id={`${this.props.id}-bottom`}\n            ref={ref => (this.bottomEndpointRef = ref)}\n            className={`${endPointStyles} ${modEndPointStyles} bottom`}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","export const data = {\n  connections: [\n    {\n      sourceId: \"1\",\n      targetId: \"2\",\n    },\n    {\n      sourceId: \"2\",\n      targetId: \"3.5\",\n    },\n    {\n      data: {\n        condition: \"true\",\n      },\n      sourceId: \"3.5\",\n      targetId: \"4.5\",\n    },\n    {\n      data: {\n        condition: \"false\",\n      },\n      sourceId: \"3.5\",\n      targetId: \"3\",\n    },\n    {\n      sourceId: \"3\",\n      targetId: \"4\",\n    },\n  ],\n  nodes: [\n    {\n      config: {\n        label: \"Default Node\",\n        type: \"source\",\n      },\n      id: \"1\",\n    },\n    {\n      config: {\n        label: \"Node Type 1\",\n        type: \"transform\",\n      },\n      id: \"2\",\n    },\n    {\n      config: {\n        label: \"Node Type 1(Sink)\",\n        type: \"sink\",\n      },\n      id: \"3\",\n    },\n    {\n      config: {\n        label: \"Node Type 3\",\n        type: \"condition\",\n      },\n      id: \"3.5\",\n    },\n    {\n      config: {\n        label: \"Node Type 2\",\n        type: \"action\",\n      },\n      id: \"4\",\n    },\n    {\n      config: {\n        label: \"Node Type 2\",\n        type: \"action\",\n      },\n      id: \"4.5\",\n    },\n  ],\n};\n","import * as serviceWorker from './serviceWorker';\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport {\n  conditionConnectionDecoder,\n  conditionConnectionEncoder,\n  transformConnectionDecoder,\n  transformConnectionEncoder,\n} from \"./connectionReducers\";\nimport {\n  defaultSettings,\n  dottedConnectionStyle,\n  selectedConnectionStyle,\n} from \"./settings/dag-settings\";\nimport { onConnectionEventHandler, onEndPointClick } from \"./eventHandlers\";\nimport { setGlobal, theme } from \"./styles\";\n\nimport ReactDAG, {DefaultNode, INode, IConnectionParams} from \"react-dag\";\nimport NodeType1 from \"./components/NodeType1\";\nimport NodeType2 from \"./components/NodeType2\";\nimport NodeType3 from \"./components/NodeType3\";\nimport { css } from \"glamor\";\nimport dagre from \"dagre\";\nimport { data } from \"./data\";\n/* tslint:disable */\nconst uuidv4 = require(\"uuid/v4\");\n/* tslint:enable */\n\n/* tslint:disable */\nconst cloneDeep = require(\"lodash.clonedeep\");\n/* tslint: enable */\n\nconst HEIGHT_OF_HEADER = 90;\nconst HEIGHT_OF_BUTTON_PANEL = 50;\nconst headerStyles = css({\n  alignItems: \"center\",\n  display: \"flex\",\n  height: `${HEIGHT_OF_HEADER}px`,\n  justifyContent: \"center\",\n  margin: 0,\n});\n\nconst buttonPanelStyles = css({\n  alignItems: \"center\",\n  background: \"white\",\n  display: \"flex\",\n  height: `${HEIGHT_OF_BUTTON_PANEL}px`,\n  justifyContent: \"center\",\n});\n\nconst buttonStyles = css({\n  border: `1px solid ${theme.main.colors.salmonPink}`,\n  boxShadow: `${theme.main.boxShadow()}`,\n  fontSize: \"inherit\",\n  margin: \"0 5px\",\n  padding: \"5px\",\n});\nconst nodeType1Styles = css({\n  backgroundColor: theme.main.colors.blueGreen,\n});\n\nconst nodeType2Styles = css({\n  backgroundColor: theme.main.colors.teal,\n});\n\nconst nodeType3Styles = css({\n  backgroundColor: theme.main.colors.yellow,\n});\n\nconst dagWrapperStyles = css({\n  background: \"white\",\n  height: `calc(100vh - ${HEIGHT_OF_HEADER}px - ${HEIGHT_OF_BUTTON_PANEL +\n    1}px)`,\n  width: \"100vw\",\n});\n\nconst registerTypes = {\n  connections: {\n    dotted: dottedConnectionStyle,\n    selected: selectedConnectionStyle,\n  },\n  endpoints: {},\n};\nconst eventListeners = {\n  click: onEndPointClick,\n  connection: onConnectionEventHandler,\n  endpointClick: onEndPointClick,\n};\n\nsetGlobal();\nconst typeToComponentMap: any = {\n  action: NodeType2,\n  condition: NodeType3,\n  sink: NodeType1,\n  source: DefaultNode,\n  transform: NodeType1,\n};\n\nconst getComponent = (type: string) =>\n  typeToComponentMap[type] ? typeToComponentMap[type] : DefaultNode;\n\nconst getLayout = (nodes: INode[], connections: IConnectionParams[], separation = 200) => {\n  const graph = new dagre.graphlib.Graph();\n  graph.setGraph({\n    marginx: 0,\n    marginy: 0,\n    nodesep: 90,\n    rankdir: \"LR\",\n    ranker: \"longest-path\",\n    ranksep: separation,\n  });\n  graph.setDefaultEdgeLabel(() => ({}));\n\n  nodes.forEach(node => {\n    const id = node.id;\n    graph.setNode(id, { label: node.config ? node.config.label : \"\", width: 100, height: 100 });\n  });\n\n  connections.forEach(connection => {\n    graph.setEdge(connection.sourceId, connection.targetId);\n  });\n\n  dagre.layout(graph);\n  return graph;\n};\nconst graphNodes = getLayout(data.nodes, data.connections);\ndata.nodes = data.nodes.map(node => {\n  const location = graphNodes.node(node.id);\n  return {\n    ...node,\n    config: {\n      ...node.config,\n      style: {\n        left: `${location.x}px`,\n        top: `${location.y}px`,\n      },\n    },\n  };\n});\nclass App extends React.Component {\n  public state = {\n    connections: data.connections,\n    nodes: data.nodes,\n    zoom: 1,\n  };\n  public addNode = (type: string) => {\n    const generateNodeConfig = (t: string) => ({\n      config: {\n        label: `Node Type: ${type} #${Math.ceil(Math.random() * 100)}`,\n        type: t,\n      },\n      id: uuidv4(),\n    });\n    this.setState({\n      nodes: [...this.state.nodes, generateNodeConfig(type)],\n    });\n  };\n  public setZoom = (zoomIn: boolean) => {\n    if (zoomIn) {\n      this.setState({ zoom: this.state.zoom + 0.2 });\n    } else {\n      this.setState({ zoom: this.state.zoom - 0.2 });\n    }\n  };\n  public render() {\n    return [\n      <h1 className={`${headerStyles}`} key=\"title\">\n        An example of React DAG\n      </h1>,\n      <div className={`${buttonPanelStyles}`} key=\"button-panel\">\n        <button\n          className={`${buttonStyles} ${nodeType1Styles}`}\n          onClick={this.addNode.bind(null, \"transform\")}\n        >\n          Add Node Type 1\n        </button>\n        <button\n          className={`${buttonStyles} ${nodeType2Styles}`}\n          onClick={this.addNode.bind(null, \"action\")}\n        >\n          Add Node Type 2\n        </button>\n        <button\n          className={`${buttonStyles} ${nodeType3Styles}`}\n          onClick={this.addNode.bind(null, \"condition\")}\n        >\n          Add Node Type 3\n        </button>\n        <button\n          className={`${buttonStyles}`}\n          onClick={this.addNode.bind(null, \"source\")}\n        >\n          Add Node Type 4\n        </button>\n        <button\n          className={`${buttonStyles} ${nodeType1Styles}`}\n          onClick={this.addNode.bind(null, \"sink\")}\n        >\n          Add Node Type 5\n        </button>\n        <button\n          className={`${buttonStyles}`}\n          onClick={this.setZoom.bind(this, true)}\n        >\n          Zoom in\n        </button>\n        <button\n          className={`${buttonStyles}`}\n          onClick={this.setZoom.bind(this, false)}\n        >\n          Zoom out\n        </button>\n      </div>,\n      <ReactDAG\n        className={`${dagWrapperStyles}`}\n        key=\"dag\"\n        connections={cloneDeep(this.state.connections)}\n        nodes={cloneDeep(this.state.nodes)}\n        jsPlumbSettings={defaultSettings}\n        connectionDecoders={[\n          transformConnectionDecoder,\n          conditionConnectionDecoder,\n        ]}\n        connectionEncoders={[\n          transformConnectionEncoder,\n          conditionConnectionEncoder,\n        ]}\n        eventListeners={eventListeners}\n        registerTypes={registerTypes}\n        onChange={({ nodes, connections }) => {\n          this.setState({ nodes, connections }); // un-necessary cycle??\n        }}\n        zoom={this.state.zoom}\n      >\n        {this.state.nodes.map((node, i) => {\n          const Component = getComponent(node.config.type);\n          return <Component key={i} id={node.id} />;\n        })}\n      </ReactDAG>,\n    ];\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}